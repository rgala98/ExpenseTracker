{"version":3,"sources":["components/header.component.jsx","context/AppReducer.jsx","context/GlobalState.jsx","components/balance.component.jsx","components/income-expense-component.jsx","components/transaction.component.jsx","components/transaction-list.component.jsx","components/add-transaction.component.jsx","App.js","index.js"],"names":["Header","state","action","type","transactions","filter","transaction","id","payload","initialState","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","Provider","value","deleteTransaction","addTransaction","Balance","total","useContext","map","amount","reduce","acc","item","toFixed","IncomeExpenses","amounts","income","expense","className","Transaction","sign","text","Math","abs","onClick","TransactionList","key","AddTransaction","useState","setText","setAmount","selector","setSelector","onSubmit","e","preventDefault","newAmount","newTransaction","uuidv4","Number","htmlFor","onChange","target","placeholder","checked","min","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.89e02e3f.chunk.js","sourcesContent":["import React from 'react'\n\nexport const Header = () => {\n    return (\n        <h2>\n           Expense Tracker \n        </h2>\n    )\n}\n ","export default (state,action) => {\n    switch (action.type) {\n\n        case 'DELETE_TRANSACTION':\n            return ({\n                ...state,\n                transactions: state.transactions.filter(transaction => transaction.id !== action.payload)\n            })\n    case 'ADD_TRANSACTION':\n        return ({\n            ...state,\n            transactions: [action.payload,...state.transactions]\n        })\n \n        \n        default:\n            return state;\n    }\n\n}","import React, {createContext, useReducer} from 'react';\nimport AppReducer from './AppReducer'\n\n// INITIAL STATE\nconst initialState = {\n    transactions: []\n}\n\n\n// CREATE CONTEXT\n\nexport const GlobalContext = createContext(initialState);\n\n//PROVIDER COMPONENT\n\nexport const GlobalProvider = ({children}) => {\n    const [state, dispatch] = useReducer(AppReducer, initialState);\n\n    //ACTIONS\n\n    function deleteTransaction(id) {\n        dispatch({\n            type: 'DELETE_TRANSACTION',\n            payload: id\n        });\n    }\n\n    function addTransaction(transaction){\n        dispatch({\n            type: 'ADD_TRANSACTION',\n            payload: transaction\n        })\n    }\n\n\n    return (<GlobalContext.Provider value={{transactions:state.transactions,\n    deleteTransaction,addTransaction}}>\n        {children}\n        </GlobalContext.Provider>\n        );\n\n\n}","import React, {useContext} from 'react';\nimport {GlobalContext} from '../context/GlobalState';\n\nexport const Balance = () => {\n\n    const {transactions} = useContext(GlobalContext);\n    const amounts = transactions.map(transaction => transaction.amount);\n    const total = amounts.reduce((acc, item) => (acc += item), 0).toFixed(2);\n\n    return (\n        <div>\n        <h4>Your Balance</h4>\n        <h1>₹{total}</h1>\n        </div>\n    )\n}\n","import React,{useContext} from 'react';\nimport {GlobalContext} from '../context/GlobalState';\n\n\nexport const IncomeExpenses = () => {\n\n\n  const {transactions} = useContext(GlobalContext);\n\n  const amounts = transactions.map(transaction => transaction.amount);\n  const income = amounts\n    .filter(item => item > 0)\n    .reduce((acc, item) => (acc += item), 0)\n    .toFixed(2);\n\n  const expense = (\n    amounts.filter(item => item < 0).reduce((acc, item) => (acc += item), 0) *\n    -1\n  ).toFixed(2);\n\n    return (\n        <div className=\"inc-exp-container\">\n        <div>\n          <h4>Income</h4>\n          <p  className=\"money plus\">+₹{income}</p>\n        </div>\n        <div>\n          <h4>Expense</h4>\n          <p className=\"money minus\">-₹{expense}</p>\n        </div>\n      </div> \n    )\n}\n","import React, {useContext} from 'react';\nimport {GlobalContext} from '../context/GlobalState';\n\nexport const Transaction = ({transaction}) => {\n\n    const sign = transaction.amount <0 ? '-' : '+';\n\n    const {deleteTransaction} = useContext(GlobalContext)\n    return (\n        <li className={transaction.amount < 0 ? 'minus': 'plus'}>\n            {transaction.text} <span>{sign}₹{Math.abs(transaction.amount)}</span>\n            <button onClick = {() => deleteTransaction(transaction.id)}className=\"delete-btn\">x</button>\n        </li>\n    )\n}\n","import React, {useContext} from 'react';\nimport {Transaction} from './transaction.component';\n\nimport {GlobalContext} from '../context/GlobalState';\n\nexport const TransactionList = () => {\n\n  const {transactions} = useContext(GlobalContext);\n\n\n    return (\n        <div>\n        <h3>History</h3>\n        <ul className=\"list\">\n        {transactions.map(\n          transaction => (\n            <Transaction key={transaction.id}transaction={transaction}/>\n          )\n        )}\n          \n        </ul>\n        </div>\n    )\n}\n","import React, {useState, useContext} from 'react';\nimport {GlobalContext} from '../context/GlobalState';\nimport { v4 as uuidv4 } from 'uuid';\n\nexport const AddTransaction = () => {\n\n    const [text, setText] = useState('');\n    const [amount, setAmount] = useState(0);\n    const [selector, setSelector] = useState('income');\n    const {addTransaction} = useContext(GlobalContext)\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n\n        const newAmount = selector === 'expense' ? `-${amount}` : `${amount}`\n\n        const newTransaction ={\n            id: uuidv4(),\n            text,\n            amount: Number(newAmount),\n\n        }\n        \n\n        addTransaction(newTransaction);\n\n        setText('');\n        setAmount(0);\n        setSelector('income');\n      \n\n    }\n    \n    return (\n        <div>\n        <h3>Add new transaction</h3>\n        <form onSubmit = {onSubmit}>\n          <div className=\"form-control\">\n            <label htmlFor=\"text\">Text</label>\n            <input \n            type=\"text\" \n            value={text} \n            onChange={(e) => setText(e.target.value)}\n            placeholder=\"Enter text...\" />\n          </div>\n          \n          <div className=\"form-control\">\n              <div className=\"select\">\n                <div className={selector === 'income' ? 'radio-btn-checked income': 'radio-btn-unchecked income'}>\n                  <label className = 'radio-label'>\n                    <input className='radio-input' type=\"radio\" value=\"income\" checked={selector === 'income'}  onChange={() => setSelector('income')}/>\n                    Income\n                  </label>\n                  </div>\n                <div className={selector === 'expense' ? 'radio-btn-checked expense': 'radio-btn-unchecked expense'}>\n                  <label className = 'radio-label'>\n                    <input className='radio-input' type=\"radio\" value=\"expense\" checked={selector === 'expense'} onChange={() => setSelector('expense')}/>\n                    Expense\n                  </label>\n                </div>\n              </div>\n              <label htmlFor=\"amount\">\n            Amount</label>\n            <input \n            type=\"number\" \n            min=\"0\"\n            value={amount} \n            onChange={(e) => setAmount(e.target.value)}\n            placeholder=\"Enter amount...\" />\n          </div>\n          <button className=\"btn\">Add transaction</button>\n        </form>\n        </div>\n    )\n}\n","import React from 'react';\nimport {Header} from './components/header.component.jsx';\n\nimport { Balance } from \"./components/balance.component.jsx\";\nimport { IncomeExpenses } from \"./components/income-expense-component.jsx\";\n\nimport { TransactionList } from \"./components/transaction-list.component.jsx\";\nimport {AddTransaction} from './components/add-transaction.component.jsx';\n\nimport { GlobalProvider } from './context/GlobalState.jsx';\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <GlobalProvider>\n      <Header/>\n      <div className=\"container\">\n      <Balance/>\n      <IncomeExpenses/>\n      <TransactionList />\n      <AddTransaction />\n      </div> \n    \n    </GlobalProvider>\n  );\n}\n\nexport default App;\n ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n \n"],"sourceRoot":""}